#!/usr/bin/env node
/* -*- Mode:js */
var XWiki = require('../index');
var XMHell = require('xmhell');
var Fs = require('fs');
var nThen = require('nthen');
var Http = require('http');

var writeDir = function (dir, structure, cb) {
    var nt = nThen;
    console.log('writeDir: ' + dir);
    for (var name in structure) {
        (function (name) {
            //console.log('name: ' + name);
            var exists = false;
            var file = dir + '/' + name;

            if (typeof(structure[name]) !== 'object' || Buffer.isBuffer(structure[name])) {
                var wr;
                if (Buffer.isBuffer(structure[name])) {
                    wr = structure[name];
                } else {
                    wr = String(structure[name]);
                }
                nt = nt(function (waitFor) {
                    console.log('writeFile: ' + file);
                    Fs.writeFile(file, wr, waitFor(function (err) {
                        if (err) { throw err; }
                    }));
                }).nThen;
            } else {
                nt = nt(function (waitFor) {
                    if (exists) { return; }
                    //console.log('mkdir: ' + file);
                    Fs.mkdir(file, waitFor(function (err) {
                        if (err && err.code !== 'EEXIST') { throw err; }
                    }));
                }).nThen(function (waitFor) {
                    writeDir(file, structure[name], waitFor());
                }).nThen;
            }
        }(name));
    }
    nt(cb);
};

var parseDump = function (dat) {
    dat = dat.replace(/&#xd;/g, '');
    var json = XMHell.parse(dat);
    writeDir(process.cwd(), XWiki.tools.DocParser.parse(json), function () {
        console.log('done');
    });
};

var main = function (args) {
    if (/^http:\/\//.test(args[args.length-1])) {
        console.log("connecting...");
        Http.request(args[args.length-1], function (response) {
			var str = '';
            console.log("downloading " + args[args.length-1]);
			response.on('data', function (chunk) { str += chunk; });
			response.on('end', function () { parseDump(str); });
        }).end();
    } else {
        Fs.readFile(args[args.length-1], function (err, data) {
            var dat = data.toString('utf8');
            parseDump(dat);
        });
    }
};
main(process.argv);
